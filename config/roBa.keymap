#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W                          &kp E      &kp R                        &kp T                                                           &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A                 &kp S                          &kp D      &kp F                        &kp G        &kp ESC                     &kp GRAVE              &kp H        &kp J  &kp K      &kp L    &kp SQT
&kp Z                 &kp X                          &kp C      &kp V                        &kp B        &kp LEFT_PARENTHESIS        &kp RIGHT_PARENTHESIS  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&lt_to_layer_0 7 ESC  &lt_to_layer_0 5 INT_MUHENKAN  &mkp LCLK  &lt_to_layer_0 3 INT_HENKAN  &lt 2 SPACE  &lt_to_layer_0 1 SPACE      &kp BACKSPACE          &lt 1 ENTER                             &kp DEL
            >;
        };

        FUNCTION {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                                          &trans  &trans  &trans    &kp UP_ARROW  &kp DEL
&kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0  &trans      &trans                      &trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5  &kp F6      &kp F7                      &kp F8  &kp F9  &kp F10   &kp F11       &kp F12
&trans        &trans        &trans        &trans        &trans  &trans      &lt_to_layer_0 6 BACKSPACE  &trans                                  &kp LC(SPACE)
            >;
        };

        NUM {
            bindings = <
&kp LS(EXCL)                &kp LS(AT)       &kp LS(POUND)    &kp LS(DLLR)     &kp LS(PRCNT)                                  &kp GRAVE      &kp LS(AMPS)  &kp FSLH      &kp LS(PIPE)  &kp BSLH
&kp LS(CARET)               &kp LS(AMPS)     &kp LS(STAR)     &kp LS(LPAR)     &kp LS(LPAR)   &kp LBKT          &kp RBKT      &kp LS(UNDER)  &kp LS(PLUS)  &kp LS(PIPE)  &kp LS(LEFT)  &kp RET
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD     &kp LS(LPAR)      &kp LS(RPAR)  &kp MINUS      &kp EQUAL     &kp LS(LEFT)  &kp LS(DOWN)  &kp LS(RIGHT)
&trans                      &trans           &trans           &trans           &trans         &trans            &trans        &trans                                                   &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&kp LC(Q)  &kp LC(W)  &kp LC(E)       &kp LC(R)     &kp LC(T)                &kp  &kp  &kp  &kp  &kp
&kp LC(A)  &kp LC(S)  &kp LC(D)       &kp LC(F)     &kp LC(G)  &kp      &kp  &kp  &kp  &kp  &kp  &kp
&kp LC(Z)  &kp LC(X)  &kp LC(C)       &kp LC(V)     &kp LC(B)  &kp      &kp  &kp  &kp  &kp  &kp  &kp
&kp        &kp        &kp LEFT_SHIFT  &kp LEFT_ALT  &kp        &kp      &kp  &kp                 &kp
            >;
        };
    };
};
